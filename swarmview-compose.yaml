version: '3.8'

networks:

  internal:
    driver: overlay
    driver_opts:
      encrypted: 'true'
  monitoring-ingress:
    name: monitoring-ingress
    external: true

services:
  dockerproxy:
    image: wollomatic/socket-proxy:1.3.1 # see https://github.com/wollomatic/socket-proxy for reference
    deploy:
      mode:
        global
      resources:
        limits: 
          cpus: '1'
          memory: 64M
    healthcheck:
      test: [ 'CMD', '/healthcheck' ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - internal
    command:
      # with this configuration socket-proxy acts similar to the tecnativa proxy. For additional hardening
      # please refer to the documentation of the wollomatic/socket-proxy image
      - '-loglevel=debug' # set to debug for far more logging
      - '-allowfrom=10.0.0.0/16'
      - '-listenip=0.0.0.0'
      - '-allowGET=/v1\.45/(.+)' # this regexp allows readonly access to anything
      - '-shutdowngracetime=5'
      - '-watchdoginterval=600'
      - '-stoponwatchdog'
      - '-allowhealthcheck'
    user: 65534:1001 # replace <<docker-gid>> with the docker gid on your host system    
    read_only: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  swarmview:
    image: ghcr.io/yaytay/swarmview:0.0.26
    deploy:
      replicas: 2
      resources:
        limits: 
          cpus: '1'
          memory: 64M
      labels:
        - traefik.http.routers.swarmview.entrypoints=internal
        - traefik.http.routers.swarmview.rule=Host(`swarmview`)
        - traefik.http.services.swarmview.loadbalancer.server.port=5173
        - traefik.swarm.network=monitoring-ingress
        - traefik.enable=true
    healthcheck:
      test: [ 'CMD', '/health' ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    environment:
      - DOCKER_PROXY_ENDPOINT=dockerproxy:2375
    networks:
      - internal
      - monitoring-ingress
    read_only: true
