# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Test

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Build UI
      run: |
        sed -i 's#<meta name="version" content="" />#<meta name="version" content="'${GITHUB_REF_NAME}'@'${GITHUB_SHA}'" />#' index.html
        sed -i 's#<span>0.0.0</span>#<span>'"${GITHUB_REF_NAME}"'</span>#' src/Version.tsx
        sed -i 's#  "version": "[0-9].[0-9].[0-9]",#  "version": "'"${GITHUB_REF_NAME}"'",#' package.json
        grep version index.html
        npm ci
        npx tsc --noEmit
        npx eslint 
        npm run build --if-present
        tar -czf build.tar.gz dist

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: |
          build.tar.gz

    - name: Build server
      run: |
        cd server
        npm ci
        npx tsc --noEmit
        cd ..
        npx eslint server

    - name: Build image
      run: |
        docker build .